{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","map","good","id","uuidv4","value","App","state","selectedGoods","clearSelection","setState","addGood","removeGood","selectedGood","filter","formatTitle","length","slice","join","this","listOfGoodsToRender","isGoodSelected","includes","buttonCallback","buttonTitle","buttonToRender","className","classNames","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAUMA,EAA0B,CAC9B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACAC,KAAI,SAAAC,GAAI,MAAK,CACbC,GAAIC,cACJC,MAAOH,MAOII,EAAb,4MACEC,MAAe,CACbC,cAAe,CAAC,QAFpB,EAKEC,eAAiB,kBAAM,EAAKC,SAAS,CAAEF,cAAe,MALxD,EAOEG,QAAU,SAACT,GACT,IAAQM,EAAkB,EAAKD,MAAvBC,cAER,EAAKE,SAAS,CAAEF,cAAc,GAAD,mBAAMA,GAAN,CAAqBN,OAVtD,EAaEU,WAAa,SAACC,GACZ,IAAQL,EAAkB,EAAKD,MAAvBC,cAER,EAAKE,SAAS,CACZF,cAAeA,EAAcM,QAC3B,SAAAZ,GAAI,OAAIA,IAASW,QAlBzB,EAuBEE,YAAc,WACZ,IAAQP,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcQ,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUR,EAAc,GAAxB,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcS,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDV,EAAcA,EAAcQ,OAAS,MAhCpG,4CAoCE,WAAU,IAAD,OACCR,EAAkBW,KAAKZ,MAAvBC,cACFY,EAAsBpB,EAAgBC,KAC1C,SAAAC,GACE,IAAMmB,EAAiBb,EAAcc,SAASpB,EAAKG,OAE7CkB,EAAiBF,EACnB,kBAAM,EAAKT,WAAWV,EAAKG,QAC3B,kBAAM,EAAKM,QAAQT,EAAKG,QAEtBmB,EAAcH,EAChB,cACA,WAEEI,EACJ,wBACEC,UAAWC,IACT,wBACA,CAAE,2BAA4BN,IAEhCO,KAAK,SACLC,QAASN,EANX,SAQGC,IAIL,OACE,qBACEE,UAAWC,IACT,sBACA,CAAE,oBAAqBN,IAH3B,UAOGnB,EAAKG,MACLoB,IAHIvB,EAAKC,OASlB,OACE,sBAAKuB,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,2BAEGP,KAAKJ,iBAER,wBACEW,UAAU,aACVE,KAAK,SACLC,QAASV,KAAKV,eAHhB,mBAOA,oBAAIiB,UAAU,YAAd,SACGN,WA5FX,GAAyBU,IAAMC,WC3B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.695d7513.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from 'classnames';\n\ninterface Good {\n  id: string;\n  value: string;\n}\n\nconst goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n].map(good => ({\n  id: uuidv4(),\n  value: good,\n}));\n\ninterface State {\n  selectedGoods: string[],\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  clearSelection = () => this.setState({ selectedGoods: [] });\n\n  addGood = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({ selectedGoods: [...selectedGoods, good] });\n  };\n\n  removeGood = (selectedGood: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({\n      selectedGoods: selectedGoods.filter(\n        good => good !== selectedGood,\n      ),\n    });\n  };\n\n  formatTitle = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]}`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const listOfGoodsToRender = goodsFromServer.map(\n      good => {\n        const isGoodSelected = selectedGoods.includes(good.value);\n\n        const buttonCallback = isGoodSelected\n          ? () => this.removeGood(good.value)\n          : () => this.addGood(good.value);\n\n        const buttonTitle = isGoodSelected\n          ? 'Remove good'\n          : 'Add good';\n\n        const buttonToRender = (\n          <button\n            className={classNames(\n              'App__item-button--add',\n              { 'App__item-button--remove': isGoodSelected },\n            )}\n            type=\"button\"\n            onClick={buttonCallback}\n          >\n            {buttonTitle}\n          </button>\n        );\n\n        return (\n          <li\n            className={classNames(\n              'App__item--unactive',\n              { 'App__item--active': isGoodSelected },\n            )}\n            key={good.id}\n          >\n            {good.value}\n            {buttonToRender}\n          </li>\n        );\n      },\n    );\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          Selected good:\n          {this.formatTitle()}\n        </h1>\n        <button\n          className=\"App__clear\"\n          type=\"button\"\n          onClick={this.clearSelection}\n        >\n          Clear\n        </button>\n        <ul className=\"App__list\">\n          {listOfGoodsToRender}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}